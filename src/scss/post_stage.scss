$bg_color: rgb(255, 255, 255);
$font_color: rgb(0, 0, 0);

.mode_change_button {
  font-size: 1.8rem;
  padding: 1rem;
  padding-left: 2rem;
  padding-right: 2rem;
  margin-right: 1rem;
  background-color: rgb(42, 210, 81);
}

canvas {
  border: 2px solid;
  border-color: white;
  margin-bottom: 1.2rem;
}

.tile {
  user-drag: none;
  -webkit-user-drag: none;
  -moz-user-select: none;
}

div.block_left {
  float: left;
  width: 530px;
}

#now_select {
  font-size: 20px;
}

#player_rotation {
  font-size: 20px;
}

#to_top {
  position: relative;
  bottom: -4rem;
}

.input_box {
  display: flex;
  /*アイコン、テキストボックスを調整する*/
  align-items: center;
  /*アイコン、テキストボックスを縦方向の中心に*/
  justify-content: center;
  /*アイコン、テキストボックスを横方向の中心に*/
  width: 480px;
  height: 50px;
  border-radius: 5px;
  border: 1px solid lightgray;
  margin-bottom: 1rem;
}

.input_inner {
  width: 100%;
  height: 100%;
  background-color: transparent;
  /*.input_boxの枠線お角一部被るため透明に*/
  position: relative;
}

.input_text {
  text-align: left;
  color: $font_color;
  position: absolute;
  z-index: 1;
  /*.input_stringよりも上に配置*/
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  border: none;
  /*枠線非表示*/
  outline: none;
  /*フォーカス時の枠線非表示*/
  padding: 0 10px;
  font-size: 16px;
  background-color: transparent;
  /*後ろの.input_stringを見せるため*/
  box-sizing: border-box;
  /*横幅の解釈をpadding, borderまでとする*/
}

//.input_string {
//  position: absolute;
//  height: 100%;
//  width: 140px;
//  /*文字列分の長さ*/
//  top: 0;
//  left: 0;
//  bottom: 0;
//  right: 0;
//  padding-left: 10px;
//  /*position: absolute;でのmarginは親要素はみ出す*/
//  font-size: 16px;
//  line-height: 50px;
//  /*文字列を縦方向にmiddleに見せるため*/
//  background-color: transparent;
//  color: #80868b;
//  box-sizing: border-box;
//  /*横幅の解釈をpadding, borderまでとする*/
//  transition: all 0.2s;
//  -webkit-transition: all 0.2s;
//}
//
//.input_text:focus+.input_string {
//  color: white;
//  font-size: 15px;
//  line-height: 10px;
//  width: 85px;
//  height: 10px;
//  padding: 0 2px;
//  transform: translate3d(5px, -14px, 0);
//}

html,
body {
  height: 100vh;
  width: 100%;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

$active_color: rgb(133, 206, 255);
$selected_color: rgb(137, 246, 133);
$inactive_color: rgb(174, 185, 192);

header {
  background-color: rgb(255, 255, 255);
  border-top: solid 4px #5d627b;
  align-items: center;
  display: grid;
  grid-template-columns: auto auto auto;
  height: 60px;
  box-sizing: border-box;

  h1 {
    text-decoration: none;
    color: #4b4b4b;
  }

  nav.navi {
    position: relative;
    text-decoration: none;
    text-align: center;
    margin: 0;
    padding: 0;
    display: inline-flex;
    overflow: hidden;
    height: 3rem;
    align-items: center;
    background-color: rgb(255, 255, 255);
    border-left: solid 2px rgb(255, 255, 255);

    > div {
      background-color: $inactive_color;
      color: #333;
      padding: 0.75rem 0.75rem 0.75rem 1.75rem;
      position: relative;

      &::after,
      &::before {
        bottom: -10px;
        clip-path: polygon(80% 50%, -50% -50%, 0 100%);
        content: "";
        left: 100%;
        position: absolute;
        top: -10px;
        width: 1rem;
        z-index: 1;
      }

      &::after {
        background: $inactive_color;
      }

      &::before {
        background: rgb(255, 255, 255);
        margin-left: 4px;
      }

      &.active {
        background-color: $active_color;
        cursor: pointer;
      }

      &.active::after {
        background-color: $active_color;
      }

      &:last-child {
        border-right: none;
      }

      &:last-child::before {
        content: none;
      }

      @at-root body.buildMap &.buildMap {
        background-color: $selected_color;

        &::after {
          background: $selected_color;
        }
      }

      @at-root body.selectBlockly &.selectBlockly {
        background-color: $selected_color;

        &::after {
          background: $selected_color;
        }
      }

      @at-root body.testPlay &.testPlay {
        background-color: $selected_color;

        &::after {
          background: $selected_color;
        }
      }

      @at-root body.postStage &.postStage {
        background-color: $selected_color;

        &::after {
          background: $selected_color;
        }
      }
    }
  }
}

#main {
  width: 100%;
  height: calc(100vh - 66px);
  position: relative;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body.buildMap #buildMap {
  visibility: visible;
}

#buildMap {
  position: absolute;
  top: 0;
  left: 0;
  visibility: hidden;
  display: grid;
  grid-template-columns: 480px 1fr;
  grid-template-rows: 600px;
  width: 100%;
  grid-gap: 0 1rem;

  @media (max-height: 660px) {
    height: calc(100vh - 60px);
    grid-template-columns: calc((100vh - 60px) * 4 / 5) 1fr;
    grid-template-rows: calc(100vh - 60px);
  }

  #buildMapCanvasDiv {
    width: 100%;
    height: 100%;

    #buildMapCanvas {
      width: 100%;
      height: 100%;
      border: 0;
      margin: 0;
    }
  }

  #mapMenu {
    width: 100%;
    height: 100%;
    display: grid;
    grid-template-rows: repeat(8, 10%) 20%;

    h3,
    h4 {
      margin: 1rem 0;
    }

    .selectTile {
      display: flex;
      flex-wrap: wrap;
      width: 100%;

      div {
        cursor: pointer;
        padding: 0.2rem;

        img {
          border: 1px rgba(0, 0, 0, 0.3) solid;
          width: 40px;
          image-rendering: pixelated;
          box-shadow: 2px 4px rgb(100, 100, 100);
          position: relative;

          &:active {
            position: relative;
            left: 2px;
            top: 4px;
            box-shadow: none;
          }
        }
      }

      .selected {
        img {
          position: relative;
          left: 2px;
          top: 4px;
          box-shadow: none;
        }
      }

      #player {
        img {
          display: none;
        }

        &.player_l {
          #player_l {
            display: inline;
          }
        }

        &.player_r {
          #player_r {
            display: inline;
          }
        }

        &.player_u {
          #player_u {
            display: inline;
          }
        }

        &.player_d {
          #player_d {
            display: inline;
          }
        }
      }
    }

    .buttonAndError {
      display: grid;
      align-items: center;
      grid-template-columns: auto auto 1fr;
      gap: 1rem;
    }

    @media (max-width: 980px) {
      grid-template-rows: repeat(9, 1fr);
      h3,
      h4 {
        margin: 0.2rem 0;
      }
    }
  }
}

body.selectBlockly #selectBlockly {
  visibility: visible;
}

#selectBlockly {
  position: absolute;
  top: 0;
  left: 0;
  visibility: hidden;
  display: grid;
  grid-template-columns: 50% 50%;
  grid-template-rows: 100%;
  width: 100%;
  height: 700px;

  @media (max-height: 760px) {
    height: calc(100vh - 60px);
  }

  #selectBlocklyDiv {
    left: 490px;
    top: 10px;
    width: 100%;
    box-shadow: 1px -1px 2px rgba(0, 0, 0, 0.22);
  }

  #selectBlocklyMenu {
    height: 100%;
    display: grid;
    grid-template-columns: 100%;
    grid-template-rows: 80% 20%;

    #selectedBlocks {
      overflow: scroll;
      + div {
        display: flex;
        justify-content: center;
        align-items: center;
        a {
          padding: 1rem;
        }
      }
    }

    h3 {
      margin: 0 1rem;
    }

    ul {
      margin: 0 0;
      font-size: 1rem;
    }
  }
}

body.testPlay #testPlay {
  visibility: visible;
}

#testPlay {
  position: absolute;
  top: 0;
  left: 0;
  display: block;
  visibility: hidden;
  width: 100%;

  #gameWrapper {
    grid-template-columns: 480px 1fr;
    grid-template-rows: 0px 600px 110px;
    height: 100%;
  }
  #meterBox {
    > div {
      display: flex;
      justify-content: center;
      align-items: center;
    }
  }

  /*縦に入りきらない場合*/
  @media (max-height: 780px) {
    height: calc(100vh - 60px);
    #gameWrapper {
      grid-template-rows: 0px calc(100vh - 60px);
      grid-template-columns: 120px calc((100vh - 60px) * 4 / 5) auto 150px;
    }

    #blocklyDiv {
      grid-column: 3;
      grid-row: 2;
    }

    #ButtonDiv2 {
      grid-column: 3;
      grid-row: 2;
    }

    #phaserDiv {
      width: 100%;
      height: 100%;
      grid-column: 2;
      grid-row: 2;
    }

    #phaserDiv > canvas {
      width: 100%;
      height: 100%;
      border: 0;
    }

    #ButtonDiv {
      grid-column: 1;
      grid-row: 2;
      grid-template-columns: 1fr;
      grid-template-rows: repeat(4, 1fr);
    }

    #meterBox {
      grid-column: 4;
      grid-row: 2;

      grid-template-columns: 1fr;
      grid-template-rows: auto auto auto;
    }

    #playerChangeButton {
      grid-column: 1;
      grid-row: 1;
    }

    #executeButton {
      grid-column: 1;
      grid-row: 3;
    }

    #resetbutton {
      grid-column: 1;
      grid-row: 4;
    }

    #speedupButton {
      grid-column: 1;
      grid-row: 2;
    }

    #alertBox {
      grid-column: 1;
      height: 100%;
      box-sizing: border-box;
    }

    .meterChildBox {
      padding-left: 0.5rem;
      padding-right: 0.5rem;
      margin: 0;
    }
  }

  #gameClear_next {
    z-index: 3;
    width: 100%;
    height: 100%;
    position: absolute;
    left: 0;
    top: 0;
    background-color: rgba(255, 255, 255, 0.5);
    display: flex;
    justify-content: center;
    align-content: center;
    flex-direction: column;

    div {
      text-align: center;
    }

    a,
    h2 {
      text-align: center;
    }
  }
}

body.postStage #postStage {
  visibility: visible;
}

#postStage {
  position: absolute;
  top: 0;
  left: 0;
  visibility: hidden;
  display: block;
  width: 100%;
  height: 100%;

  #postStageDiv {
    width: 50%;
    margin: 0 auto;
  }

  #postStageConfirm {
    z-index: 3;
    width: 100%;
    height: 100%;
    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(255, 255, 255, 1);

    #postStageConfirmDiv {
      width: 50%;
      margin: 0 auto;

      > div {
        text-align: left;

        > div {
          display: inline-block;
        }
      }

      #postStageConfirmButtonDiv {
        text-align: center;
      }

      a,
      h2 {
        text-align: center;
      }

      #postEnd {
        position: relative;

        #shareTwitter {
          position: relative;
          display: inline-block;
          left: auto;
          top: auto;
          margin: 1rem;
        }
      }
    }
  }
}

.errorMessage {
  font-size: 1.2rem;
  margin-left: 1rem;
  padding: 0.5rem 1rem;
  color: rgb(144, 0, 0);
  background-color: rgb(255, 178, 178);
  border-top: 2px solid rgb(255, 0, 0);
  border-bottom: 2px solid rgb(255, 0, 0);
}
