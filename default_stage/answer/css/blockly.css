.blocklyText,
.blocklyFlyoutLabelText {
  font: normal 11pt sans-serif;
}

.blocklyText {
  fill: #fff;
}

.blocklyNonEditableText > rect,
.blocklyEditableText > rect {
  fill: #fff;
  fill-opacity: .6;
  stroke: none;
}

.blocklyNonEditableText > text,
.blocklyEditableText > text {
  fill: #000;
}

.blocklyFlyoutLabelText {
  fill: #000;
}

.blocklyText.blocklyBubbleText {
  fill: #000;
}

.blocklyEditableText:not(.editing):hover > rect {
  stroke: #fff;
  stroke-width: 2;
}

.blocklyHtmlInput {
  font-family: sans-serif;
  font-weight: normal;
}

.blocklySelected > .blocklyPath {
  stroke: #fc3;
  stroke-width: 3px;
}

.blocklyHighlightedConnectionPath {
  stroke: #fc3;
}

.blocklyReplaceable .blocklyPath {
  fill-opacity: .5;
}

.blocklyReplaceable .blocklyPathLight,
.blocklyReplaceable .blocklyPathDark {
  display: none;
}

.blocklyInsertionMarker > .blocklyPath {
  fill-opacity: 0.2;
  stroke: none;
}

.blocklyInsertionMarker > .blocklyPathLight,
.blocklyInsertionMarker > .blocklyPathDark {
  fill-opacity: 0.2;
  stroke: none;
}

.blocklySvg {
  background-color: #fff;
  outline: none;
  overflow: hidden;
  /* IE overflows by default. */
  position: relative;
  display: block;
}

.blocklyWidgetDiv {
  display: none;
  position: absolute;
  z-index: 99999;
  /* big value for bootstrap3 compatibility */
}

.injectionDiv {
  height: 100%;
  position: relative;
  overflow: hidden;
  /* So blocks in drag surface disappear at edges */
  -ms-touch-action: none;
      touch-action: none;
}

.blocklyNonSelectable {
  -moz-user-select: none;
       user-select: none;
  -ms-user-select: none;
  -webkit-user-select: none;
}

.blocklyWsDragSurface {
  display: none;
  position: absolute;
  top: 0;
  left: 0;
}

/* Added as a separate rule with multiple classes to make it more specific
         than a bootstrap rule that selects svg:root. See issue #1275 for context.
      */
.blocklyWsDragSurface.blocklyOverflowVisible {
  overflow: visible;
}

.blocklyBlockDragSurface {
  display: none;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  overflow: visible !important;
  z-index: 50;
  /* Display below toolbox, but above everything else. */
}

.blocklyBlockCanvas.blocklyCanvasTransitioning,
.blocklyBubbleCanvas.blocklyCanvasTransitioning {
  -webkit-transition: -webkit-transform .5s;
  transition: -webkit-transform .5s;
  transition: transform .5s;
  transition: transform .5s, -webkit-transform .5s;
}

.blocklyTooltipDiv {
  background-color: #ffffc7;
  border: 1px solid #ddc;
  -webkit-box-shadow: 4px 4px 20px 1px rgba(0, 0, 0, 0.15);
          box-shadow: 4px 4px 20px 1px rgba(0, 0, 0, 0.15);
  color: #000;
  display: none;
  font: 9pt sans-serif;
  opacity: .9;
  padding: 2px;
  position: absolute;
  z-index: 100000;
  /* big value for bootstrap3 compatibility */
}

.blocklyDropDownDiv {
  position: absolute;
  left: 0;
  top: 0;
  z-index: 1000;
  display: none;
  border: 1px solid;
  border-color: #dadce0;
  background-color: #fff;
  border-radius: 2px;
  padding: 4px;
  -webkit-box-shadow: 0 0 3px 1px rgba(0, 0, 0, 0.3);
          box-shadow: 0 0 3px 1px rgba(0, 0, 0, 0.3);
}

.blocklyDropDownDiv.blocklyFocused {
  -webkit-box-shadow: 0 0 6px 1px rgba(0, 0, 0, 0.3);
          box-shadow: 0 0 6px 1px rgba(0, 0, 0, 0.3);
}

.blocklyDropDownContent {
  max-height: 300px;
  overflow: auto;
  overflow-x: hidden;
  position: relative;
}

.blocklyDropDownArrow {
  position: absolute;
  left: 0;
  top: 0;
  width: 16px;
  height: 16px;
  z-index: -1;
  background-color: inherit;
  border-color: inherit;
}

.blocklyDropDownButton {
  display: inline-block;
  float: left;
  padding: 0;
  margin: 4px;
  border-radius: 4px;
  outline: none;
  border: 1px solid;
  -webkit-transition: -webkit-box-shadow .1s;
  transition: -webkit-box-shadow .1s;
  transition: box-shadow .1s;
  transition: box-shadow .1s, -webkit-box-shadow .1s;
}

.blocklyArrowTop {
  border-top: 1px solid;
  border-left: 1px solid;
  border-top-left-radius: 4px;
  border-color: inherit;
}

.blocklyArrowBottom {
  border-bottom: 1px solid;
  border-right: 1px solid;
  border-bottom-right-radius: 4px;
  border-color: inherit;
}

.blocklyResizeSE {
  fill: #aaa;
}

.blocklyResizeSW {
  fill: #aaa;
}

.blocklyResizeLine {
  stroke: #515A5A;
  stroke-width: 1;
}

.blocklyHighlightedConnectionPath {
  fill: none;
  stroke: #fc3;
  stroke-width: 4px;
}

.blocklyPathLight {
  fill: none;
  stroke-linecap: round;
  stroke-width: 1;
}

.blocklySelected > .blocklyPathLight {
  display: none;
}

/*
.blocklyDraggable {
    cursor: url("https://blockly-demo.appspot.com/static/media/handopen.cur"), auto;
    cursor: ;
    cursor: -webkit-;
}

.blocklyDragging {
    cursor: url("https://blockly-demo.appspot.com/static/media/handclosed.cur"), auto;
    cursor: bing;
    cursor: -webkit-bing;
}

.blocklyDraggable:active {
    cursor: url("https://blockly-demo.appspot.com/static/media/handclosed.cur"), auto;
    cursor: bing;
    cursor: -webkit-bing;
}

.blocklyBlockDragSurface .blocklyDraggable {
    cursor: url("https://blockly-demo.appspot.com/static/media/handclosed.cur"), auto;
    cursor: bing;
    cursor: -webkit-bing;
}
.blocklyDragging.blocklyDraggingDelete {
    cursor: url("https://blockly-demo.appspot.com/static/media/handdelete.cur"), auto;
}

*/
.blocklyDragging > .blocklyPath,
.blocklyDragging > .blocklyPathLight {
  fill-opacity: .8;
  stroke-opacity: .8;
}

.blocklyDragging > .blocklyPathDark {
  display: none;
}

.blocklyDisabled > .blocklyPath {
  fill-opacity: .5;
  stroke-opacity: .5;
}

.blocklyDisabled > .blocklyPathLight,
.blocklyDisabled > .blocklyPathDark {
  display: none;
}

.blocklyInsertionMarker > .blocklyPath,
.blocklyInsertionMarker > .blocklyPathLight,
.blocklyInsertionMarker > .blocklyPathDark {
  fill-opacity: .2;
  stroke: none;
}

.blocklyMultilineText {
  font-family: monospace;
}

.blocklyNonEditableText > text {
  pointer-events: none;
}

.blocklyFlyout {
  position: absolute;
  z-index: 20;
}

.blocklyText text {
  cursor: default;
}

/*
        Don't allow users to select text.  It gets annoying when trying to
        drag a block and selected text moves instead.
      */
.blocklySvg text,
.blocklyBlockDragSurface text {
  -moz-user-select: none;
       user-select: none;
  -ms-user-select: none;
  -webkit-user-select: none;
}

.blocklyHidden {
  display: none;
}

.blocklyFieldDropdown:not(.blocklyHidden) {
  display: block;
}

.blocklyIconGroup {
  cursor: default;
}

.blocklyIconGroup:not(:hover),
.blocklyIconGroupReadonly {
  opacity: .6;
}

.blocklyIconShape {
  fill: #00f;
  stroke: #fff;
  stroke-width: 1px;
}

.blocklyIconSymbol {
  fill: #fff;
}

.blocklyMinimalBody {
  margin: 0;
  padding: 0;
}

.blocklyHtmlInput {
  border: none;
  border-radius: 4px;
  height: 100%;
  margin: 0;
  outline: none;
  padding: 0;
  width: 100%;
  text-align: center;
  display: block;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

/* Edge and IE introduce a close icon when the input value is longer than a
         certain length. This affects our sizing calculations of the text input.
         Hiding the close icon to avoid that. */
.blocklyHtmlInput::-ms-clear {
  display: none;
}

.blocklyMainBackground {
  stroke-width: 1;
  stroke: #c6c6c6;
  /* Equates to #ddd due to border being off-pixel. */
}

.blocklyMutatorBackground {
  fill: #fff;
  stroke: #ddd;
  stroke-width: 1;
}

.blocklyFlyoutBackground {
  fill: #ddd;
  fill-opacity: .8;
}

.blocklyMainWorkspaceScrollbar {
  z-index: 20;
}

.blocklyFlyoutScrollbar {
  z-index: 30;
}

.blocklyScrollbarHorizontal,
.blocklyScrollbarVertical {
  position: absolute;
  outline: none;
}

.blocklyScrollbarBackground {
  opacity: 0;
}

.blocklyScrollbarHandle {
  fill: #ccc;
}

.blocklyScrollbarBackground:hover + .blocklyScrollbarHandle,
.blocklyScrollbarHandle:hover {
  fill: #bbb;
}

/* Darken flyout scrollbars due to being on a grey background. */
/* By contrast, workspace scrollbars are on a white background. */
.blocklyFlyout .blocklyScrollbarHandle {
  fill: #bbb;
}

.blocklyFlyout .blocklyScrollbarBackground:hover + .blocklyScrollbarHandle,
.blocklyFlyout .blocklyScrollbarHandle:hover {
  fill: #aaa;
}

.blocklyInvalidInput {
  background: #faa;
}

.blocklyVerticalMarker {
  stroke-width: 3px;
  fill: rgba(255, 255, 255, 0.5);
  pointer-events: none;
}

.blocklyComputeCanvas {
  position: absolute;
  width: 0;
  height: 0;
}

.blocklyNoPointerEvents {
  pointer-events: none;
}

.blocklyContextMenu {
  border-radius: 4px;
  max-height: 100%;
}

.blocklyDropdownMenu {
  border-radius: 2px;
  padding: 0 !important;
}

.blocklyDropdownMenu .blocklyMenuItem {
  /* 28px on the left for icon or checkbox. */
  padding-left: 28px;
}

/* BiDi override for the resting state. */
.blocklyDropdownMenu .blocklyMenuItemRtl {
  /* Flip left/right padding for BiDi. */
  padding-left: 5px;
  padding-right: 28px;
}

.blocklyWidgetDiv .blocklyMenu {
  background: #fff;
  border: 1px solid transparent;
  -webkit-box-shadow: 0 0 3px 1px rgba(0, 0, 0, 0.3);
          box-shadow: 0 0 3px 1px rgba(0, 0, 0, 0.3);
  font: normal 13px Arial, sans-serif;
  margin: 0;
  outline: none;
  padding: 4px 0;
  position: absolute;
  overflow-y: auto;
  overflow-x: hidden;
  max-height: 100%;
  z-index: 20000;
  /* Arbitrary, but some apps depend on it... */
}

.blocklyWidgetDiv .blocklyMenu.blocklyFocused {
  -webkit-box-shadow: 0 0 6px 1px rgba(0, 0, 0, 0.3);
          box-shadow: 0 0 6px 1px rgba(0, 0, 0, 0.3);
}

.blocklyDropDownDiv .blocklyMenu {
  background: inherit;
  /* Compatibility with gapi, reset from goog-menu */
  border: inherit;
  /* Compatibility with gapi, reset from goog-menu */
  font: normal 13px "Helvetica Neue", Helvetica, sans-serif;
  outline: none;
  position: relative;
  /* Compatibility with gapi, reset from goog-menu */
  z-index: 20000;
  /* Arbitrary, but some apps depend on it... */
}

/* State: resting. */
.blocklyMenuItem {
  border: none;
  color: #000;
  list-style: none;
  margin: 0;
  /* 7em on the right for shortcut. */
  min-width: 7em;
  padding: 6px 15px;
  white-space: nowrap;
}

/* State: disabled. */
.blocklyMenuItemDisabled {
  color: #ccc;
}

/* State: hover. */
.blocklyMenuItemHighlight {
  background-color: rgba(0, 0, 0, 0.1);
}

/* State: selected/checked. */
.blocklyMenuItemCheckbox {
  height: 16px;
  position: absolute;
  width: 16px;
}

.blocklyMenuItemSelected .blocklyMenuItemCheckbox {
  background: url(https://blockly-demo.appspot.com/static/media/sprites.png) no-repeat -48px -16px;
  float: left;
  margin-left: -24px;
  position: static;
  /* Scroll with the menu. */
}

.blocklyMenuItemRtl .blocklyMenuItemCheckbox {
  float: right;
  margin-right: -24px;
}

.blocklyTreeRow:not(.blocklyTreeSelected):hover {
  background-color: rgba(255, 255, 255, 0.2);
}

.blocklyToolboxDiv[layout="h"] .blocklyToolboxCategory {
  margin: 1px 5px 1px 0;
}

.blocklyToolboxDiv[dir="RTL"][layout="h"] .blocklyToolboxCategory {
  margin: 1px 0 1px 5px;
}

.blocklyTreeRow {
  height: 22px;
  line-height: 22px;
  margin-bottom: 3px;
  padding-right: 8px;
  white-space: nowrap;
}

.blocklyToolboxDiv[dir="RTL"] .blocklyTreeRow {
  margin-left: 8px;
  padding-right: 0;
}

.blocklyTreeIcon {
  background-image: url(https://blockly-demo.appspot.com/static/media/sprites.png);
  height: 16px;
  vertical-align: middle;
  visibility: hidden;
  width: 16px;
}

.blocklyTreeIconClosed {
  background-position: -32px -1px;
}

.blocklyToolboxDiv[dir="RTL"] .blocklyTreeIconClosed {
  background-position: 0 -1px;
}

.blocklyTreeSelected > .blocklyTreeIconClosed {
  background-position: -32px -17px;
}

.blocklyToolboxDiv[dir="RTL"] .blocklyTreeSelected > .blocklyTreeIconClosed {
  background-position: 0 -17px;
}

.blocklyTreeIconOpen {
  background-position: -16px -1px;
}

.blocklyTreeSelected > .blocklyTreeIconOpen {
  background-position: -16px -17px;
}

.blocklyTreeLabel {
  font: 16px sans-serif;
  padding: 0 3px;
  vertical-align: middle;
}

.blocklyTreeSelected .blocklyTreeLabel {
  color: #fff;
}

.blocklyTreeSeparator {
  border-bottom: solid #e5e5e5 1px;
  height: 0;
  margin: 5px 0;
}

.blocklyToolboxDiv[layout="h"] .blocklyTreeSeparator {
  border-right: solid #e5e5e5 1px;
  border-bottom: none;
  height: auto;
  margin: 0 5px 0 5px;
  padding: 5px 0;
  width: 0;
}

/*
.blocklyToolboxDelete {
    cursor: url("https://blockly-demo.appspot.com/static/media/handdelete.cur"), auto;
}
.blocklyToolbox {
    cursor: url("https://blockly-demo.appspot.com/static/media/handclosed.cur"), auto;
    cursor: bing;
    cursor: -webkit-bing;
}
*/
/* Category tree in Toolbox. */
.blocklyToolboxDiv {
  background-color: #ddd;
  overflow-x: visible;
  overflow-y: auto;
  padding: 4px 0 4px 0;
  position: absolute;
  z-index: 70;
  /* so blocks go under toolbox when dragging */
  -webkit-tap-highlight-color: transparent;
  /* issue #1345 */
}

.blocklyToolboxContents {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.blocklyToolboxContents:focus {
  outline: none;
}

.blocklyHtmlTextAreaInput {
  font-family: monospace;
  resize: none;
  overflow: hidden;
  height: 100%;
  text-align: left;
}

.blocklyHtmlTextAreaInputOverflowedY {
  overflow-y: scroll;
}

.blocklyColourTable {
  border-collapse: collapse;
  display: block;
  outline: none;
  padding: 1px;
}

.blocklyColourTable > tr > td {
  border: .5px solid #888;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  display: inline-block;
  height: 20px;
  padding: 0;
  width: 20px;
}

.blocklyColourTable > tr > td.blocklyColourHighlighted {
  border-color: #eee;
  -webkit-box-shadow: 2px 2px 7px 2px rgba(0, 0, 0, 0.3);
          box-shadow: 2px 2px 7px 2px rgba(0, 0, 0, 0.3);
  position: relative;
}

.blocklyColourSelected,
.blocklyColourSelected:hover {
  border-color: #eee !important;
  outline: 1px solid #333;
  position: relative;
}

.blocklyAngleCircle {
  stroke: #444;
  stroke-width: 1;
  fill: #ddd;
  fill-opacity: .8;
}

.blocklyAngleMarks {
  stroke: #444;
  stroke-width: 1;
}

.blocklyAngleGauge {
  fill: #f88;
  fill-opacity: .8;
  pointer-events: none;
}

.blocklyAngleLine {
  stroke: #f00;
  stroke-width: 2;
  stroke-linecap: round;
  pointer-events: none;
}

.blocklyCommentTextarea {
  background-color: #fef49c;
  border: 0;
  display: block;
  margin: 0;
  outline: 0;
  padding: 3px;
  resize: none;
  text-overflow: hidden;
}

.blocklyZoom > image,
.blocklyZoom > svg > image {
  opacity: .4;
}

.blocklyZoom > image:hover,
.blocklyZoom > svg > image:hover {
  opacity: .6;
}

.blocklyZoom > image:active,
.blocklyZoom > svg > image:active {
  opacity: .8;
}

.blocklyCommentForeignObject {
  position: relative;
  z-index: 0;
}

.blocklyCommentRect {
  fill: #E7DE8E;
  stroke: #bcA903;
  stroke-width: 1px;
}

.blocklyCommentTarget {
  fill: transparent;
  stroke: #bcA903;
}

.blocklyCommentTargetFocused {
  fill: none;
}

.blocklyCommentHandleTarget {
  fill: none;
}

.blocklyCommentHandleTargetFocused {
  fill: transparent;
}

.blocklyFocused > .blocklyCommentRect {
  fill: #B9B272;
  stroke: #B9B272;
}

.blocklySelected > .blocklyCommentTarget {
  stroke: #fc3;
  stroke-width: 3px;
}

.blocklyCommentDeleteIcon {
  fill: #000;
  display: none;
}

.blocklySelected > .blocklyCommentDeleteIcon {
  display: block;
}

.blocklyDeleteIconShape {
  fill: #000;
  stroke: #000;
  stroke-width: 1px;
}

.blocklyDeleteIconShape.blocklyDeleteIconHighlighted {
  stroke: #fc3;
}

.blocklyFlyoutButton {
  fill: #888;
}

.blocklyFlyoutButtonShadow {
  fill: #666;
}

.blocklyFlyoutButton:hover {
  fill: #aaa;
}

.blocklyFlyoutLabelBackground {
  opacity: 0;
}

.blocklyTrash {
  display: none;
}
/*# sourceMappingURL=commentaryBlockly.css.map */